@page
@model BookingManagement.User.Razor.Pages.Login.IndexModel
@{
    ViewData["Title"] = "Đăng nhập";
}

<div class="row justify-content-center mt-5">
    <div class="col-md-6">
        <div class="card shadow-lg" style="border-radius: 15px;">
            <div class="card-header text-white" style="background-color: #f27125; border-radius: 15px 15px 0 0;">
                <h3 class="text-center mb-0">FPTU-RBS</h3>
                <p class="text-center mb-0">Đăng nhập hệ thống</p>
            </div>
                <div class="card-body p-4">
                    <form method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-4"></div>
                        <input type="hidden" asp-for="ReturnUrl" />

                        <div class="mb-3">
                            <label asp-for="Input.Email" class="form-label">Email</label>
                            <input asp-for="Input.Email" class="form-control" placeholder="Nhập email" />
                            <span asp-validation-for="Input.Email" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Input.Password" class="form-label">Mật khẩu</label>
                            <input asp-for="Input.Password" type="password" class="form-control" placeholder="Nhập mật khẩu" />
                            <span asp-validation-for="Input.Password" class="text-danger"></span>
                        </div>

                        <div class="mb-3 form-check">
                            <input asp-for="Input.RememberMe" class="form-check-input" type="checkbox" />
                            <label asp-for="Input.RememberMe" class="form-check-label">Ghi nhớ đăng nhập</label>
                        </div>

                        <div class="d-grid gap-2 mb-3">
                            <button type="submit" class="btn text-white" style="background-color: #f27125;">Đăng nhập</button>
                        </div>

                        <div class="text-center">
                            <p class="mb-0">Chưa có tài khoản? <a asp-page="/Register/Index" style="color: #f27125; font-weight: bold;">Đăng ký</a></p>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Success Toast -->
<div class="position-fixed top-0 end-0 p-3" style="z-index: 1055;">
    <div id="successToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true" style="border-radius: 15px; overflow: hidden; border: none; box-shadow: 0 6px 20px rgba(0,0,0,0.15);">
        <div class="toast-header" style="background-color: #28a745; color: white; border-radius: 15px 15px 0 0; border: none;">
            <i class="bi bi-check-circle-fill me-2"></i>
            <strong class="me-auto">Thành công!</strong>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close" style="border-radius: 50%;"></button>
        </div>
        <div class="toast-body" style="background-color: white; color: #333; border-radius: 0 0 15px 15px; border: none;">
            <div class="d-flex align-items-center">
                <div class="flex-grow-1" id="toastMessage">
                    Đăng ký tài khoản thành công! Bạn có thể đăng nhập ngay bây giờ.
                </div>
            </div>
            <div class="progress mt-2" style="height: 4px; border-radius: 8px; background-color: #f8f9fa;">
                <div class="progress-bar" style="background-color: #28a745; border-radius: 8px;" role="progressbar" style="width: 0%" id="progressBar"></div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">
    <style>
        .bg-primary, .btn-primary {
            background-color: #f27125 !important;
            border-color: #f27125 !important;
        }
        .text-primary {
            color: #f27125 !important;
        }
        .input-group-text {
            background-color: #f8f9fa;
        }
        .card {
            border-radius: 15px;
        }
        .card-header {
            border-radius: 15px 15px 0 0 !important;
        }
        .form-control:focus {
            border-color: #f27125;
            box-shadow: 0 0 0 0.2rem rgba(242, 113, 37, 0.25);
        }
        
        .text-primary:hover {
            color: #d45a1a !important;
        }
    </style>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Check if there's a success message from TempData
            @if (TempData["SuccessMessage"] != null)
            {
                <text>
                showSuccessToast('@Html.Raw(TempData["SuccessMessage"])');
                </text>
            }
            // Check if there's a success message from Model
            @if (!string.IsNullOrEmpty(Model.SuccessMessage))
            {
                <text>
                showSuccessToast('@Html.Raw(Model.SuccessMessage)');
                </text>
            }
        });

        function showSuccessToast(message) {
            const toastElement = document.getElementById('successToast');
            const toastMessage = document.getElementById('toastMessage');
            const progressBar = document.getElementById('progressBar');
            
            if (!toastElement || !toastMessage || !progressBar) {
                console.error('Toast elements not found');
                return;
            }
            
            toastMessage.innerHTML = message;
            
            // Reset progress bar
            progressBar.style.width = '100%';
            
            const toast = new bootstrap.Toast(toastElement, {
                autohide: false
            });
            toast.show();
            
            // Animate progress bar from 100% to 0% over 5 seconds
            let progress = 100;
            const interval = setInterval(() => {
                progress -= 2;
                progressBar.style.width = progress + '%';
                
                if (progress <= 0) {
                    clearInterval(interval);
                    toast.hide();
                }
            }, 100);
        }
    </script>
}
